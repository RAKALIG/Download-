‍Для решения данной задачи, я предлагаю использовать следующую функцию:

```python
def replace_g_with_star(string):
    # определяем длину строки
    n = len(string)
    # определяем первую половину строки
    first_half = string[:n//2]
    
    # создаем новую строку, заменяя буквы "g" на "*"
    new_string = ""
    for char in string:
        if char == "g" and char in first_half:
            new_string += "*"
        else:
            new_string += char
    
    # выводим новую строку и сообщение о наличии или отсутствии замененных символов
    if "*" in new_string:
        print("Наличие замененных символов:")
    else:
        print("Отсутствие замененных символов:")
    print(new_string)
```

Для проверки работы функции, можно добавить следующий код:

```python
string = "python programming"
replace_g_with_star(string)
```

Опишу работу данной функции:

1. В функции `replace_g_with_star` в качестве аргумента ожидается строка `string`.
2. Затем, мы определяем длину строки `n` с помощью функции `len()`.
3. Далее, мы определяем первую половину строки `first_half`, используя срез `string[:n//2]`.
4. Создаем пустую строку `new_string`, в которую будем добавлять символы с замененными "g".
5. Проходим по каждому символу `char` в строке `string`.
6. Проверяем условие, где символ `char` равен "g" и находится в первой половине строки `first_half`.
   - Если условие выполняется, то добавляем "*" в `new_string`.
   - Если условие не выполняется, то добавляем символ `char` в `new_string`.
7. После завершения цикла, проверяем наличие замененных символов в `new_string`.
   - Если есть замененные символы, то выдаем сообщение "Наличие замененных символов:" и выводим `new_string`.
   - Если нет замененных символов, то выдаем сообщение "Отсутствие замененных символов:" и выводим `new_string`.

Таким образом, функция `replace_g_with_star` заменяет все буквы "g", встречающиеся среди первых n/2 символов, на "*".
